{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c66cdd7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n    return (\n        <button onClick={onClick} style={{backgroundColor:color}} className='btn'>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps={\n    text: 'newButton',\n    color:'steelblue'\n}\nButton.protoTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","//used rcafc\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    // const onClick = () => {\n    //     console.log(\"clicked\")\n    // }\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n            \n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\nHeader.propTypes = {\n    title: PropTypes.string.isRequired, // title has to be a string\n}\n\n// const headingstyle = {\n//     color:'red', \n//     backgroundColor:'black'\n// }\n\nexport default Header","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)} >\n            <h3>{task.text} <FaTimes style={{color:'red',cursor:'pointer'}} onClick={() => onDelete(task.id)} /> </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task)=>(\n                <Task key={task.id} task={task} onToggle={onToggle} onDelete={onDelete} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setText('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='AddTask' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","//we are not use class based components, but only \nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id:1,\n        text:'Doctors appointment',\n        day:'Feb 5th at 2:30pm',\n        reminder:'true',\n    },\n    {\n        id:2,\n        text:'Meeting at school',\n        day:'Feb 6th at 2:30pm',\n        reminder:'true',\n    },\n    {\n        id:3,\n        text:'Food shopping',\n        day:'Feb 5th at 2:30pm',\n        reminder:'flase',\n    }\n])\n\n// Add task\nconst addTask = (task) => {\n  // console.log(task)\n  const id = Math.floor(Math.random()*10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle reminder\nconst toggleReminder = (id) => {\n  // console.log(id)\n  setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n}\n\n  return (\n    // this is JSX a bit different\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask}/>) : ('No Tasks to show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}